import os
import tempfile

############
##  Args  ##
############
# fusion
FASTQ_FWD = config.get("fastq_fwd", "")
FASTQ_REV = config.get("fastq_rev", "")
BED_GENEFUSE = config.get("bed_genefuse", "")
BED_LUMPY = config.get("bed_lumpy")
REF = config.get("ref", "")

# common
BAM = config["bam"]
BED_HMNFUSION = config["bed_hmnfusion"]
NAME = config["name"]
OUTPUT = config["output_file"]

OUTDIR = os.path.dirname(OUTPUT)

# dynamic
LUMPY = config.get(
    "lumpy",
    os.path.join(OUTDIR, ".".join([NAME, "lumpy", "vcf"]))
)
GENEFUSE = config.get(
    "genefuse",
    os.path.join(OUTDIR, ".".join([NAME, "genefuse", "html"]))
)
GENEFUSE_FMT = config.get("genefuse_fmt", "html")

HMNFUSION_EXTRACTFUSION = os.path.join(tempfile.gettempdir(), NAME + ".extractfusion.json")
LUMPY_DISCORDANT = os.path.join(tempfile.gettempdir(), NAME + ".lumpy.discordant.bam")
LUMPY_SPLITTER = os.path.join(tempfile.gettempdir(), NAME + ".lumpy.splitter.bam")

# Include File
INCLUDE = []
INCLUDE.append(OUTPUT)

# Debug.
# print("Fastq", FASTQ_FWD, FASTQ_REV)
print("Bed", BED_HMNFUSION, BED_GENEFUSE, BED_LUMPY)
# print("Ref", REF)
print("Bam", BAM)
print("Name", NAME)
print("Lumpy/Genefuse", LUMPY, GENEFUSE, GENEFUSE_FMT)
print("Out", OUTPUT, OUTDIR)
print("Include", INCLUDE)

#############
##  Rules  ##
#############
rule all:
    input:
        INCLUDE

# Lumpy.
rule lumpy_discordant:
    input:
        bam = BAM
    params:
        soft = "samtools"
    output:
        bam = temp(LUMPY_DISCORDANT)
    shell:
        '{params.soft} view -b -F 1294 {input.bam} | {params.soft} sort - -o {output.bam}'

rule lumpy_splitters:
    input:
        bam = BAM
    params:
        samtools = "samtools",
        script = "extractSplitReads_BwaMem"
    output:
        bam = temp(LUMPY_SPLITTER)
    shell:
        '{params.samtools} view -h {input.bam} | {params.script} -i stdin | {params.samtools} sort -o {output.bam}'

rule lumpy_express:
    input:
        basal = BAM,
        splitter = rules.lumpy_splitters.output.bam,
        discordant = rules.lumpy_discordant.output.bam
    params:
        soft = "lumpyexpress",
        bed = BED_LUMPY
    output:
        vcf = LUMPY
    shell:
        '{params.soft} -B {input.basal} -S {input.splitter} -D {input.discordant} -o {output.vcf} -x {params.bed}'

# GeneFuse
rule genefuse:
    input:
        r1 = FASTQ_FWD,
        r2 = FASTQ_REV
    params:
        ref = REF,
        fusion = BED_GENEFUSE,
        soft = "genefuse"
    output:
        html = GENEFUSE
    shell:
        "{params.soft} --read1 {input.r1} --read2 {input.r2} --fusion {params.fusion} --ref {params.ref} -h {output.html} -d 20 -D -U"

# HmnFusion
rule extract:
    input:
        genefuse = GENEFUSE,
        lumpy = LUMPY
    params:
        genefuse = GENEFUSE_FMT
    output:
        json = temp(HMNFUSION_EXTRACTFUSION)
    shell:
        'hmnfusion extractfusion \
            --genefuse-"{params.genefuse}" "{input.genefuse}" \
            --lumpy-vcf "{input.lumpy}" \
            --output-json "{output.json}"'

rule quantification:
    input:
        json = rules.extract.output.json,
        bam = BAM
    params:
        bed = BED_HMNFUSION,
        name = NAME
    output:
        vcf = OUTPUT
    shell:
        'hmnfusion quantification \
            --hmnfusion-json "{input.json}" \
            --input-bam "{input.bam}" \
            --input-bed "{params.bed}" \
            --name "{params.name}" \
            --output-vcf "{output.vcf}"'
